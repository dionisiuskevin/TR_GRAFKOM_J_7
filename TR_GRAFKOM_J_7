#include <windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif
#include <stdlib.h>
#include <math.h>

void init(void);
void tampil(void);
void keyboard(unsigned char, int, int);
void ukuran(int, int);

double rotate_y = 0;
double rotate_x = 0;
double x = 0.50;
double y = 0;

int is_depth;

int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
	glutInitWindowSize(800, 600);
	glutInitWindowPosition(250, 80);
	glutCreateWindow("3D");
	init();
	glutDisplayFunc(tampil);
	glutKeyboardFunc(keyboard);
	glutReshapeFunc(ukuran);
	glutMainLoop();
	return 0;
}

void init(void)
{
	glClearColor(0.0, 0.0, 0.0, 0.0);
	glEnable(GL_DEPTH_TEST);
	is_depth = 1;
	glMatrixMode(GL_MODELVIEW);
	glPointSize(9.0);
	glLineWidth(6.0f);
}


void jendela(void) {

	glRotatef(rotate_x, -56, 0.0, 0.0);
	glRotatef(rotate_y, 0.0, 34, 0.0);

	glBegin(GL_QUADS);
	glColor3f(0, 0, 1);
	glVertex3f(x, y + 4, 0);
	glVertex3f(x, y, 0);
	glVertex3f(x + 4, y, 0);
	glVertex3f(x + 4, y + 4, 0);
	glEnd();
}

void tembokL(void) {
	//tembok depan
	glBegin(GL_POLYGON);
	glColor3f(1.0, 1.0, 0.0);
	glVertex3d(3.246598, 19.306227, -0.925725);
	glVertex3d(-3.7622, 19.306227, -0.925724);
	glVertex3d(-3.7622, 2.485111, -0.925724);
	glVertex3d(3.246598, 2.485111, -0.925725);
	glEnd();

	//sisi kiri
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 0.0);
	glVertex3d(-3.7622, 19.306227, -0.925724);
	glVertex3d(-3.762198, 19.306227, 13.091872);
	glVertex3d(-3.762198, 2.485111, 13.091872);
	glVertex3d(-3.7622, 2.485111, -0.925724);
	glEnd();

	//tembok depan2
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.1, 0.0);
	glVertex3d(3.246598, 19.306227, -2.117221);
	glVertex3d(3.246598, 2.485111, -2.117221);
	glVertex3d(-4.953695, 2.485111, -2.11722);
	glVertex3d(-4.953695, 19.306227, -2.11722);
	glEnd();

	//sisi kiri 2
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.2, 0.0);
	glVertex3d(-4.953695, 19.306227, -2.11722);
	glVertex3d(-4.953695, 2.485111, -2.11722);
	glVertex3d(-4.953694, 2.485111, 13.091872);
	glVertex3d(-4.953694, 19.306227, 13.091872);
	glEnd();

	//penutup tembok 1
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.3, 1.0);
	glVertex3d(3.246598, 19.306227, -0.925725);
	glVertex3d(3.246598, 2.485111, -0.925725);
	glVertex3d(3.246598, 2.485111, -2.117221);
	glVertex3d(3.246598, 19.306227, -2.117221);
	glEnd();

	//penutup tembok bawah
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.4, 1.0);
	glVertex3d(3.246598, 2.485111, -0.925725);
	glVertex3d(-3.7622, 2.485111, -0.925724);
	glVertex3d(-4.953695, 2.485111, -2.11722);
	glVertex3d(3.246598, 2.485111, -2.117221);
	glEnd();

	//penutup tembok depan1
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.5, 1.0);
	glVertex3d(-3.762198, 2.485111, 13.091872);
	glVertex3d(-3.762198, 19.306227, 13.091872);
	glVertex3d(-4.953694, 19.306227, 13.091872);
	glVertex3d(-4.953694, 2.485111, 13.091872);
	glEnd();

	//penutup tembok bawah1
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.1, 0.1);
	glVertex3d(-3.7622, 2.485111, -0.925724);
	glVertex3d(-3.762198, 2.485111, 13.091872);
	glVertex3d(-4.953694, 2.485111, 13.091872);
	glVertex3d(-4.953695, 2.485111, -2.11722);
	glEnd();

	//penutup tembok atas1
	glBegin(GL_POLYGON);
	glColor3f(1.0, 1.0, 1.0);
	glVertex3d(-3.7622, 19.306227, -0.925724);
	glVertex3d(3.246598, 19.306227, -0.925725);
	glVertex3d(3.246598, 19.306227, -2.117221);
	glVertex3d(-4.953695, 19.306227, -2.11722);
	glEnd();

	//penutup tembok atas2
	glBegin(GL_POLYGON);
	glColor3f(1.0, 1.0, 1.0);
	glVertex3d(-3.762198, 19.306227, 13.091872);
	glVertex3d(-3.7622, 19.306227, -0.925724);
	glVertex3d(-4.953695, 19.306227, -2.11722);
	glVertex3d(-4.953694, 19.306227, 13.091872);
	glEnd();
}
void tembok2(void) {
	//tembok2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.0, 1.0);
	glVertex3d(3.271061, 19.564161, -20.2087);
	glVertex3d(3.271061, 2.743045, -20.2087);
	glVertex3d(-3.737737, 2.743045, -20.2087);
	glVertex3d(-3.737737, 19.564161, -20.2087);
	glEnd();

	//sisi tembok2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.0, 1.0);
	glVertex3d(-3.737737, 19.564161, -20.2087);
	glVertex3d(-3.737737, 2.743045, -20.2087);
	glVertex3d(-3.737738, 2.743045, -34.226295);
	glVertex3d(-3.737738, 19.564161, -34.226295);
	glEnd();

	//sisi tembok2 depan
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.0, 1.0);
	glVertex3d(-3.737738, 19.564161, -34.226295);
	glVertex3d(-3.737738, 2.743045, -34.226295);
	glVertex3d(5.513876, 2.743045, -34.226295);
	glVertex3d(5.513876, 19.564161, -34.226295);
	glEnd();

	//sisi lapis 2 tembok2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.1, 0.0);
	glVertex3d(3.271061, 19.564161, -19.017204);
	glVertex3d(-4.929232, 19.564161, -19.017204);
	glVertex3d(-4.929232, 2.743045, -19.017204);
	glVertex3d(3.271061, 2.743045, -19.017204);
	glEnd();

	//sisi lapis tembok2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.1, 0.0);
	glVertex3d(-4.929232, 19.564161, -19.017204);
	glVertex3d(-4.929233, 19.564161, -35.417793);
	glVertex3d(-4.929233, 2.743045, -35.417793);
	glVertex3d(-4.929232, 2.743045, -19.017204);
	glEnd();

	//sisi lapis tembok2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.1, 0.0);
	glVertex3d(-4.929233, 19.564161, -35.417793);
	glVertex3d(5.513876, 19.564161, -35.417793);
	glVertex3d(5.513876, 2.743045, -35.417793);
	glVertex3d(-4.929233, 2.743045, -35.417793);
	glEnd();

	//penutup dinding tembok2
	glBegin(GL_POLYGON);
	glColor3f(0.1, 0.0, 0.0);
	glVertex3d(5.513876, 19.564161, -34.226295);
	glVertex3d(5.513876, 2.743045, -34.226295);
	glVertex3d(5.513876, 2.743045, -35.417793);
	glVertex3d(5.513876, 19.564161, -35.417793);
	glEnd();

	//penutup tembok2
	glBegin(GL_POLYGON);
	glColor3f(0.1, 0.0, 0.0);
	glVertex3d(3.271061, 2.743045, -20.2087);
	glVertex3d(3.271061, 19.564161, -20.2087);
	glVertex3d(3.271061, 19.564161, -19.017204);
	glVertex3d(3.271061, 2.743045, -19.017204);
	glEnd();

	//penutup tembok2 atas
	glBegin(GL_POLYGON);
	glColor3f(0.1, 0.0, 0.0);
	glVertex3d(-3.737738, 19.564161, -34.226295);
	glVertex3d(5.513876, 19.564161, -34.226295);
	glVertex3d(5.513876, 19.564161, -35.417793);
	glVertex3d(-4.929233, 19.564161, -35.417793);
	glEnd();

	//penutup bawah
	glBegin(GL_POLYGON);
	glColor3f(0.2, 0.0, 0.8);
	glVertex3d(5.513876, 2.743045, -34.226295);
	glVertex3d(-3.737738, 2.743045, -34.226295);
	glVertex3d(-4.929233, 2.743045, -35.417793);
	glVertex3d(5.513876, 2.743045, -35.417793);
	glEnd();

	//penutup bawah 2
	glBegin(GL_POLYGON);
	glColor3f(0.2, 0.0, 0.8);
	glVertex3d(3.271061, 19.564161, -20.2087);
	glVertex3d(-3.737737, 19.564161, -20.2087);
	glVertex3d(-4.929232, 19.564161, -19.017204);
	glVertex3d(3.271061, 19.564161, -19.017204);
	glEnd();

	//penutup bawah 2
	glBegin(GL_POLYGON);
	glColor3f(0.2, 0.0, 0.8);
	glVertex3d(-3.737738, 2.743045, -34.226295);
	glVertex3d(-3.737737, 2.743045, -20.2087);
	glVertex3d(-4.929232, 2.743045, -19.017204);
	glVertex3d(-4.929233, 2.743045, -35.417793);
	glEnd();

	//penutup bawah 2
	glBegin(GL_POLYGON);
	glColor3f(0.3, 0.0, 0.8);
	glVertex3d(-3.737737, 2.743045, -20.2087);
	glVertex3d(3.271061, 2.743045, -20.2087);
	glVertex3d(3.271061, 2.743045, -19.017204);
	glVertex3d(-4.929232, 2.743045, -19.017204);
	glEnd();

	//penutup bawah 2
	glBegin(GL_POLYGON);
	glColor3f(0.3, 0.0, 0.8);
	glVertex3d(-3.737737, 19.564161, -20.2087);
	glVertex3d(-3.737738, 19.564161, -34.226295);
	glVertex3d(-4.929233, 19.564161, -35.417793);
	glVertex3d(-4.929232, 19.564161, -19.017204);
	glEnd();
}
void utama_lapis1(void) {
	//tembok belakang 1
	glBegin(GL_POLYGON);
	glColor3f(1.0, 1.0, 1.0);
	glVertex3d(-22.494768, 19.043976, 18.537577);
	glVertex3d(5.362164, 19.043976, 18.537577);
	glVertex3d(5.362164, -0.069272, 18.537577);
	glVertex3d(-22.494768, -0.069272, 18.537577);
	glEnd();

	//sisi kanan tembok belakang
	glBegin(GL_POLYGON);
	glColor3f(0.0, 1.0, 0.1);
	glVertex3d(5.362164, 19.043976, 18.537577);
	glVertex3d(5.362164, 19.043976, -0.747992);
	glVertex3d(5.362164, -0.069272, -0.747992);
	glVertex3d(5.362164, -0.069272, 18.537577);
	glEnd();

	//sisi belakang
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.5, 0.1);
	glVertex3d(5.362164, 19.043976, -0.747992);
	glVertex3d(3.219322, 19.043976, -0.747992);
	glVertex3d(3.219322, -0.069272, -0.747992);
	glVertex3d(5.362164, -0.069272, -0.747992);
	glEnd();


	//penghubung tembokL dan tembok 2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.5, 0.2);
	glVertex3d(3.219322, 19.043976, -0.747992);
	glVertex3d(3.219322, 19.043976, -20.03356);
	glVertex3d(3.219322, -0.069272, -20.03356);
	glVertex3d(3.219322, -0.069272, -0.747992);
	glEnd();

	//dinding penghubung
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.5, 0.3);
	glVertex3d(3.219322, 19.043976, -20.03356);
	glVertex3d(5.362164, 19.043976, -20.03356);
	glVertex3d(5.362164, -0.069272, -20.03356);
	glVertex3d(3.219322, -0.069272, -20.03356);
	glEnd();

	//dinding penghubung
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.5, 0.4);
	glVertex3d(5.362164, 19.043976, -20.03356);
	glVertex3d(5.362164, 19.043976, -39.31913);
	glVertex3d(5.362164, -0.069272, -39.31913);
	glVertex3d(5.362164, -0.069272, -20.03356);
	glEnd();

	//dinding penghubung belakang
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.5, 0.5);
	glVertex3d(5.362164, 19.043976, -39.31913);
	glVertex3d(-13.923405, 19.043976, -39.31913);
	glVertex3d(-13.923405, -0.069272, -39.31913);
	glVertex3d(5.362164, -0.069272, -39.31913);
	glEnd();

	//dinding penghubung
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.6, 0.1);
	glVertex3d(-13.923405, 19.043976, -39.31913);
	glVertex3d(-13.923405, 19.043976, -20.03356);
	glVertex3d(-13.923405, -0.069272, -20.03356);
	glVertex3d(-13.923405, -0.069272, -39.31913);
	glEnd();

	//tengah depan
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 0.0);
	glVertex3d(-13.923405, 19.043976, -20.03356);
	glVertex3d(-11.780563, 19.043976, -20.03356);
	glVertex3d(-11.780563, -0.069272, -20.03356);
	glVertex3d(-13.923405, -0.069272, -20.03356);
	glEnd();

	//tengah depan
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.1, 0.0);
	glVertex3d(-11.780563, 19.043976, -20.03356);
	glVertex3d(-11.780563, 19.043976, -0.747992);
	glVertex3d(-11.780563, -0.069272, -0.747992);
	glVertex3d(-11.780563, -0.069272, -20.03356);
	glEnd();

	//tengah
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.2, 0.0);
	glVertex3d(-11.780563, 19.043976, -0.747992);
	glVertex3d(-9.637723, 19.043976, -0.747992);
	glVertex3d(-9.637723, -0.069272, -0.747992);
	glVertex3d(-11.780563, -0.069272, -0.747992);
	glEnd();

	//tengah
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.3, 0.0);
	glVertex3d(-9.637723, 19.043976, -0.747992);
	glVertex3d(-9.637723, 19.043976, 12.109055);
	glVertex3d(-9.637723, -0.069272, 12.109055);
	glVertex3d(-9.637723, -0.069272, -0.747992);
	glEnd();

	//tengah
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.4, 0.0);
	glVertex3d(-9.637723, 19.043976, 12.109055);
	glVertex3d(-11.780563, 19.043976, 12.109055);
	glVertex3d(-11.780563, -0.069272, 12.109055);
	glVertex3d(-9.637723, -0.069272, 12.109055);
	glEnd();

	//tengah
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.5, 0.0);
	glVertex3d(-11.780563, 19.043976, 12.109055);
	glVertex3d(-11.780563, 19.043976, 7.823372);
	glVertex3d(-11.780563, -0.069272, 7.823372);
	glVertex3d(-11.780563, -0.069272, 12.109055);
	glEnd();

	//tengah
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.6, 0.0);
	glVertex3d(-11.780563, 19.043976, 7.823372);
	glVertex3d(-22.494768, 19.043976, 7.823372);
	glVertex3d(-22.494768, -0.069272, 7.823372);
	glVertex3d(-11.780563, -0.069272, 7.823372);
	glEnd();

	//tengah
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.7, 0.0);
	glVertex3d(-22.494768, 19.043976, 7.823372);
	glVertex3d(-22.494768, 19.043976, 18.537577);
	glVertex3d(-22.494768, -0.069272, 18.537577);
	glVertex3d(-22.494768, -0.069272, 7.823372);
	glEnd();
}

void utama_lapis2(void) {
	//utama lapis2
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.8, 0.0);
	glVertex3d(-23.223333, 19.043976, 19.266142);
	glVertex3d(-23.223333, -0.069272, 19.266142);
	glVertex3d(6.090729, -0.069272, 19.266142);
	glVertex3d(6.090729, 19.043976, 19.266142);
	glEnd();

	//tengah 2
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.9, 0.0);
	glVertex3d(6.090729, 19.043976, 19.266142);
	glVertex3d(6.090729, -0.069272, 19.266142);
	glVertex3d(6.090729, -0.069272, -1.476557);
	glVertex3d(6.090729, 19.043976, -1.476557);
	glEnd();

	//tengah 2
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.9, 0.0);
	glVertex3d(6.090729, 19.043976, -1.476557);
	glVertex3d(6.090729, -0.069272, -1.476557);
	glVertex3d(3.947889, -0.069272, -1.476557);
	glVertex3d(3.947889, 19.043976, -1.476557);
	glEnd();

	//tengah 2
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.9, 0.0);
	glVertex3d(3.947889, 19.043976, -1.476557);
	glVertex3d(3.947889, -0.069272, -1.476557);
	glVertex3d(3.947889, -0.069272, -19.304991);
	glVertex3d(3.947889, 19.043976, -19.304991);
	glEnd();

	//tengah2
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.9, 0.0);
	glVertex3d(3.947889, 19.043976, -19.304991);
	glVertex3d(3.947889, -0.069272, -19.304991);
	glVertex3d(6.090729, -0.069272, -19.304991);
	glVertex3d(6.090729, 19.043976, -19.304991);
	glEnd();

	//tengah2
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.9, 0.0);
	glVertex3d(6.090729, 19.043976, -19.304991);
	glVertex3d(6.090729, -0.069272, -19.304991);
	glVertex3d(6.090729, -0.069272, -40.047691);
	glVertex3d(6.090729, 19.043976, -40.047691);
	glEnd();

	//tengah2
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.9, 0.0);
	glVertex3d(6.090729, 19.043976, -40.047691);
	glVertex3d(6.090729, -0.069272, -40.047691);
	glVertex3d(-14.65197, -0.069272, -40.047691);
	glVertex3d(-14.65197, 19.043976, -40.047691);
	glEnd();

	//tengah 2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 1.0, 0.0);
	glVertex3d(-14.65197, 19.043976, -40.047691);
	glVertex3d(-14.65197, -0.069272, -40.047691);
	glVertex3d(-14.65197, -0.069272, -19.304991);
	glVertex3d(-14.65197, 19.043976, -19.304991);
	glEnd();

	//tengah 2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 1.0, 0.0);
	glVertex3d(-14.65197, 19.043976, -19.304991);
	glVertex3d(-14.65197, -0.069272, -19.304991);
	glVertex3d(-12.50913, -0.069272, -19.304991);
	glVertex3d(-12.50913, 19.043976, -19.304991);
	glEnd();

	//tengah2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 1.0, 0.0);
	glVertex3d(-12.50913, 19.043976, -19.304991);
	glVertex3d(-12.50913, -0.069272, -19.304991);
	glVertex3d(-12.50913, -0.069272, -0.019424);
	glVertex3d(-12.50913, 19.043976, -0.019424);
	glEnd();

	//tengah2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 1.0, 0.0);
	glVertex3d(-12.50913, 19.043976, -0.019424);
	glVertex3d(-12.50913, -0.069272, -0.019424);
	glVertex3d(-10.366289, -0.069272, -0.019424);
	glVertex3d(-10.366289, 19.043976, -0.019424);
	glEnd();

	//tengah2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 1.0, 0.0);
	glVertex3d(-10.366289, 19.043976, -0.019424);
	glVertex3d(-10.366289, -0.069272, -0.019424);
	glVertex3d(-10.366289, -0.069272, 11.380488);
	glVertex3d(-10.366289, 19.043976, 11.380488);
	glEnd();

	//tengah2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.0, 1.0);
	glVertex3d(-10.366289, 19.043976, 11.380488);
	glVertex3d(-10.366289, -0.069272, 11.380488);
	glVertex3d(-11.051997, -0.069272, 11.380488);
	glVertex3d(-11.051997, 19.043976, 11.380488);
	glEnd();

	//tengah2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.0, 1.0);
	glVertex3d(-11.051997, 19.043976, 11.380488);
	glVertex3d(-11.051997, -0.069272, 11.380488);
	glVertex3d(-11.051997, -0.069272, 7.094806);
	glVertex3d(-11.051997, 19.043976, 7.094806);
	glEnd();

	//tengah2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.0, 1.0);
	glVertex3d(-11.051997, 19.043976, 7.094806);
	glVertex3d(-11.051997, -0.069272, 7.094806);
	glVertex3d(-23.223333, -0.069272, 7.094806);
	glVertex3d(-23.223333, 19.043976, 7.094806);
	glEnd();

	//tengah 2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.0, 1.0);
	glVertex3d(-23.223333, 19.043976, 7.094806);
	glVertex3d(-23.223333, -0.069272, 7.094806);
	glVertex3d(-23.223333, -0.069272, 19.266142);
	glVertex3d(-23.223333, 19.043976, 19.266142);
	glEnd();

	//tengah2
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.0, 1.0);
	glVertex3d(-13.923405, -0.069272, -20.03356);
	glVertex3d(-11.780563, -0.069272, -20.03356);
	glVertex3d(-12.50913, -0.069272, -19.304991);
	glVertex3d(-14.65197, -0.069272, -19.304991);
	glEnd();
}
void lapisan_dinding(void) {

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-11.780563, 19.043976, -20.03356);
	glVertex3d(-13.923405, 19.043976, -20.03356);
	glVertex3d(-14.65197, 19.043976, -19.304991);
	glVertex3d(-12.50913, 19.043976, -19.304991);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(5.362164, 19.043976, -39.31913);
	glVertex3d(5.362164, 19.043976, -20.03356);
	glVertex3d(6.090729, 19.043976, -19.304991);
	glVertex3d(6.090729, 19.043976, -40.047691);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-22.494768, -0.069272, 7.823372);
	glVertex3d(-22.494768, -0.069272, 18.537577);
	glVertex3d(-23.223333, -0.069272, 19.266142);
	glVertex3d(-23.223333, -0.069272, 7.094806);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(5.362164, -0.069272, 18.537577);
	glVertex3d(5.362164, -0.069272, -0.747992);
	glVertex3d(6.090729, -0.069272, -1.476557);
	glVertex3d(6.090729, -0.069272, 19.266142);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(5.362164, -0.069272, -0.747992);
	glVertex3d(3.219322, -0.069272, -0.747992);
	glVertex3d(3.947889, -0.069272, -1.476557);
	glVertex3d(6.090729, -0.069272, -1.476557);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(3.219322, 19.043976, -0.747992);
	glVertex3d(5.362164, 19.043976, -0.747992);
	glVertex3d(6.090729, 19.043976, -1.476557);
	glVertex3d(3.947889, 19.043976, -1.476557);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(3.219322, -0.069272, -0.747992);
	glVertex3d(3.219322, -0.069272, -20.03356);
	glVertex3d(3.947889, -0.069272, -19.304991);
	glVertex3d(3.947889, -0.069272, -1.476557);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-11.780563, 19.043976, 7.823372);
	glVertex3d(-11.780563, 19.043976, 12.109055);
	glVertex3d(-11.051997, 19.043976, 11.380488);
	glVertex3d(-11.051997, 19.043976, 7.094806);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-11.780563, 19.043976, -0.747992);
	glVertex3d(-11.780563, 19.043976, -20.03356);
	glVertex3d(-12.50913, 19.043976, -19.304991);
	glVertex3d(-12.50913, 19.043976, -0.019424);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(5.362164, -0.069272, -39.31913);
	glVertex3d(-13.923405, -0.069272, -39.31913);
	glVertex3d(-14.65197, -0.069272, -40.047691);
	glVertex3d(6.090729, -0.069272, -40.047691);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-13.923405, 19.043976, -39.31913);
	glVertex3d(5.362164, 19.043976, -39.31913);
	glVertex3d(6.090729, 19.043976, -40.047691);
	glVertex3d(-14.65197, 19.043976, -40.047691);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-13.923405, -0.069272, -39.31913);
	glVertex3d(-13.923405, -0.069272, -20.03356);
	glVertex3d(-14.65197, -0.069272, -19.304991);
	glVertex3d(-14.65197, -0.069272, -40.047691);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(5.362164, -0.069272, -20.03356);
	glVertex3d(5.362164, -0.069272, -39.31913);
	glVertex3d(6.090729, -0.069272, -40.047691);
	glVertex3d(6.090729, -0.069272, -19.304991);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-22.494768, 19.043976, 7.823372);
	glVertex3d(-11.780563, 19.043976, 7.823372);
	glVertex3d(-11.051997, 19.043976, 7.094806);
	glVertex3d(-23.223333, 19.043976, 7.094806);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-11.780563, -0.069272, 7.823372);
	glVertex3d(-22.494768, -0.069272, 7.823372);
	glVertex3d(-23.223333, -0.069272, 7.094806);
	glVertex3d(-11.051997, -0.069272, 7.094806);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(3.219322, 19.043976, -20.03356);
	glVertex3d(3.219322, 19.043976, -0.747992);
	glVertex3d(3.947889, 19.043976, -1.476557);
	glVertex3d(3.947889, 19.043976, -19.304991);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-11.780563, -0.069272, 12.109055);
	glVertex3d(-11.780563, -0.069272, 7.823372);
	glVertex3d(-11.051997, -0.069272, 7.094806);
	glVertex3d(-11.051997, -0.069272, 11.380488);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-13.923405, 19.043976, -20.03356);
	glVertex3d(-13.923405, 19.043976, -39.31913);
	glVertex3d(-14.65197, 19.043976, -40.047691);
	glVertex3d(-14.65197, 19.043976, -19.304991);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-11.780563, -0.069272, -20.03356);
	glVertex3d(-11.780563, -0.069272, -0.747992);
	glVertex3d(-12.50913, -0.069272, -0.019424);
	glVertex3d(-12.50913, -0.069272, -19.304991);
	glEnd();

	//atas
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-11.780563, -0.069272, -0.747992);
	glVertex3d(-9.637723, -0.069272, -0.747992);
	glVertex3d(-10.366289, -0.069272, -0.019424);
	glVertex3d(-12.50913, -0.069272, -0.019424);
	glEnd();


	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-9.637723, 19.043976, -0.747992);
	glVertex3d(-11.780563, 19.043976, -0.747992);
	glVertex3d(-12.50913, 19.043976, -0.019424);
	glVertex3d(-10.366289, 19.043976, -0.019424);
	glEnd();

	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-9.637723, -0.069272, -0.747992);
	glVertex3d(-9.637723, -0.069272, 12.109055);
	glVertex3d(-10.366289, -0.069272, 11.380488);
	glVertex3d(-10.366289, -0.069272, -0.019424);
	glEnd();

	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(5.362164, 19.043976, 18.537577);
	glVertex3d(-22.494768, 19.043976, 18.537577);
	glVertex3d(-23.223333, 19.043976, 19.266142);
	glVertex3d(6.090729, 19.043976, 19.266142);
	glEnd();

	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(3.219322, -0.069272, -20.03356);
	glVertex3d(5.362164, -0.069272, -20.03356);
	glVertex3d(6.090729, -0.069272, -19.304991);
	glVertex3d(3.947889, -0.069272, -19.304991);
	glEnd();

	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(5.362164, 19.043976, -20.03356);
	glVertex3d(3.219322, 19.043976, -20.03356);
	glVertex3d(3.947889, 19.043976, -19.304991);
	glVertex3d(6.090729, 19.043976, -19.304991);
	glEnd();

	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-9.637723, 19.043976, 12.109055);
	glVertex3d(-9.637723, 19.043976, -0.747992);
	glVertex3d(-10.366289, 19.043976, -0.019424);
	glVertex3d(-10.366289, 19.043976, 11.380488);
	glEnd();


	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(5.362164, 19.043976, -0.747992);
	glVertex3d(5.362164, 19.043976, 18.537577);
	glVertex3d(6.090729, 19.043976, 19.266142);
	glVertex3d(6.090729, 19.043976, -1.476557);
	glEnd();


	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-11.780563, 19.043976, 12.109055);
	glVertex3d(-9.637723, 19.043976, 12.109055);
	glVertex3d(-10.366289, 19.043976, 11.380488);
	glVertex3d(-11.051997, 19.043976, 11.380488);
	glEnd();


	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-9.637723, -0.069272, 12.109055);
	glVertex3d(-11.780563, -0.069272, 12.109055);
	glVertex3d(-11.051997, -0.069272, 11.380488);
	glVertex3d(-10.366289, -0.069272, 11.380488);
	glEnd();

	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-22.494768, -0.069272, 18.537577);
	glVertex3d(5.362164, -0.069272, 18.537577);
	glVertex3d(6.090729, -0.069272, 19.266142);
	glVertex3d(-23.223333, -0.069272, 19.266142);
	glEnd();


	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.0, 1.0);
	glVertex3d(-22.494768, 19.043976, 18.537577);
	glVertex3d(-22.494768, 19.043976, 7.823372);
	glVertex3d(-23.223333, 19.043976, 7.094806);
	glVertex3d(-23.223333, 19.043976, 19.266142);
	glEnd();
}
void atap() {
	//atap
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.8, 0.0);
	glVertex3d(-22.494768, 19.043976, 18.537577);
	glVertex3d(5.362164, 19.043976, 18.537577);
	glVertex3d(5.362164, 19.043976, -0.747992);
	glVertex3d(3.219322, 19.043976, -0.747992);
	glVertex3d(3.219322, 19.043976, -20.03356);
	glVertex3d(5.362164, 19.043976, -20.03356);
	glVertex3d(5.362164, 19.043976, -39.31913);
	glVertex3d(-13.923405, 19.043976, -39.31913);
	glVertex3d(-13.923405, 19.043976, -20.03356);
	glVertex3d(-11.780563, 19.043976, -20.03356);
	glVertex3d(-11.780563, 19.043976, -0.747992);
	glVertex3d(-9.637723, 19.043976, -0.747992);
	glVertex3d(-9.637723, 19.043976, 12.109055);
	glVertex3d(-11.780563, 19.043976, 12.109055);
	glVertex3d(-11.780563, 19.043976, 7.823372);
	glVertex3d(-22.494768, 19.043976, 7.823372);
	glEnd();
}
void lantai() {
	//lantai
	glBegin(GL_POLYGON);
	glColor3f(1.0, 0.2, 0.0);
	glVertex3d(5.362164, -0.069272, 18.537577);
	glVertex3d(5.362164, -0.069272, -0.747992);
	glVertex3d(3.219322, -0.069272, -0.747992);
	glVertex3d(3.219322, -0.069272, -20.03356);
	glVertex3d(5.362164, -0.069272, -20.03356);
	glVertex3d(5.362164, -0.069272, -39.31913);
	glVertex3d(-13.923405, -0.069272, -39.31913);
	glVertex3d(-13.923405, -0.069272, -20.03356);
	glVertex3d(-11.780563, -0.069272, -20.03356);
	glVertex3d(-11.780563, -0.069272, -0.747992);
	glVertex3d(-9.637723, -0.069272, -0.747992);
	glVertex3d(-9.637723, -0.069272, 12.109055);
	glVertex3d(-11.780563, -0.069272, 12.109055);
	glVertex3d(-11.780563, -0.069272, 7.823372);
	glVertex3d(-22.494768, -0.069272, 7.823372);
	glVertex3d(-22.494768, -0.069272, 18.537577);
	glEnd();
}
void tampil(void)
{
	if (is_depth)
		glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
	else
		glClear(GL_COLOR_BUFFER_BIT);

	
	//tembokL();
	//tembok2();
	//utama_lapis1();
	//utama_lapis2();
	//lapisan_dinding();
	atap();
	//lantai();





	

	







	//dinding luar
	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.2, 1.0);
	glVertex3d(-22.494768, 0.886391, 18.537577);
	glVertex3d(-22.494768, -0.069272, 18.537577);
	glVertex3d(5.362164, -0.069272, 18.537577);
	glVertex3d(5.362164, 0.886391, 18.537577);
	glEnd();

	glBegin(GL_POLYGON);
	glColor3f(0.0, 0.2, 1.0);
	glVertex3d(5.362164, 0.886391, 18.537577);
	glVertex3d(5.362164, -0.069272, 18.537577);
	glVertex3d(5.362164, -0.069272, -0.747992);
	glVertex3d(5.362164, 0.886391, -0.747992);
	glEnd();































	glPushMatrix();
	glPopMatrix();
	glutSwapBuffers();
}

void keyboard(unsigned char key, int x, int y)
{
	switch (key)
	{
	case 'w':
	case 'W':
		glTranslatef(0.0, 0.0, 3.0);
		break;
	case 'd':
	case 'D':
		glTranslatef(3.0, 0.0, 0.0);
		break;
	case 's':
	case 'S':
		glTranslatef(0.0, 0.0, -3.0);
		break;
	case 'a':
	case 'A':
		glTranslatef(-3.0, 0.0, 0.0);
		break;
	case '7':
		glTranslatef(0.0, 3.0, 0.0);
		break;
	case '9':
		glTranslatef(0.0, -3.0, 0.0);
		break;
	case '2':
		glRotatef(2.0, 1.0, 0.0, 0.0);
		break;
	case '8':
		glRotatef(-2.0, 1.0, 0.0, 0.0);
		break;
	case '6':
		glRotatef(2.0, 0.0, 1.0, 0.0);
		break;
	case '4':
		glRotatef(-2.0, 0.0, 1.0, 0.0);
		break;
	case '1':
		glRotatef(-2.0, 0.0, 0.0, 1.0);
		break;
	case '5':
		if (is_depth)
		{
			is_depth = 0;
			glDisable(GL_DEPTH_TEST);
		}
		else
		{
			is_depth = 1;
			glEnable(GL_DEPTH_TEST);
		}
	}
	tampil();
}

void ukuran(int lebar, int tinggi)
{
	if (tinggi == 0) tinggi = 1;
	glMatrixMode(GL_PROJECTION);
	gluPerspective(50.0, lebar / tinggi, 5.0, 500.0);
	glTranslatef(0.0, -5.0, -150.0);
	glMatrixMode(GL_MODELVIEW);
}
